class c extends HTMLElement{static get observedAttributes(){return["src"]}attributeChangedCallback(a,b,d){if(!this.__initialized)return;b!==d&&(this[a]=d)}get src(){return this.getAttribute("src")}set src(a){this.setAttribute("src",a),this.setSrc()}constructor(){super();this.__initialized=!1,this.__element=null;const a=this.hasAttribute("shadow");a&&this.attachShadow({mode:"open"}),this.__element=a?this.shadowRoot:this}async connectedCallback(){this.hasAttribute("src")&&this.setSrc(),this.__initialized=!0}async setSrc(){const a=this.getAttribute("src"),b=await this.fetchSrc(a);this.__element.innerHTML=b}async fetchSrc(a){const b=await fetch(a);return b.text()}}customElements.define("wc-include",c);export{c as WCInclude};
